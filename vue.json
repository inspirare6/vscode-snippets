{
    "vue template": {
        "prefix": "vue",
        "body": [
            "<script setup>",
            "",
            "</script>",
            "",
            "<template>",
            "  <div>",
            "",
            "  </div>",
            "</template>",
            "",
            "<style lang=\"less\">",
            "",
            "</style>"
        ],
        "description": "vue template"
    },
    "dialog template": {
        "prefix": "dialog",
        "body": [
            "<script setup>",
            "import { ref } from 'vue'",
            "",
            "const emits = defineEmits(['confirm'])",
            "",
            "const dialogRef = ref(null)",
            "const formRef = ref(null)",
            "const data = ref({})",
            "",
            "const rules = {",
            "    name: [{ required: true, message: '请输入名称', trigger: 'blur' }]",
            "}",
            "",
            "async function validate() {",
            "    let flag = 0",
            "    await formRef.value.validate(function (valid) {",
            "        flag = valid",
            "    })",
            "    return flag",
            "}",
            "",
            "defineExpose({",
            "    show(row) {",
            "        data.value = row",
            "        dialogRef.value.show()",
            "    }",
            "})",
            "</script>",
            "",
            "<template>",
            "    <z-dialog ref='dialogRef' title='$1' :validate='validate' @confirm='emits(\"confirm\", data)'>",
            "        <el-form ref='formRef' :model='data' :rules='rules' label-width='70px'>",
            "            <el-row>",
            "                <el-col :span='24'>",
            "                    <el-form-item label='' prop=''>",
            "                    </el-form-item>",
            "                </el-col>",
            "            </el-row>",
            "        </el-form>",
            "    </z-dialog>",
            "</template>",
            "",
            "<style lang='less'></style>"
        ],
        "description": "dialog template"
    },
    "control template": {
        "prefix": "control",
        "body": [
            "<script setup>",
            "import { ref } from 'vue';",
            "",
            "const emits = defineEmits([])",
            "",
            "const props = defineProps({",
            "    table: {},",
            "    filter: {",
            "        type: Object,",
            "        default() {",
            "            return {}",
            "        }",
            "    },",
            "})",
            "</script>",
            "",
            "<template>",
            "    <z-query-control :table=\"table\" :filter=\"filter\" @query=\"emits('query')\">",
            "        <template #inputs>",
            "            <z-input placeholder=\"\" type=\"number\" v-model=\"filter.name\"></z-input>",
            "        </template>",
            "        <template #buttons>",
            "        </template>",
            "    </z-query-control>",
            "</template>",
            "",
            "<style lang=\"less\"></style>"
        ],
        "description": "control template"
    },
    "table template": {
        "prefix": "table",
        "body": [
            "<script setup>",
            "import { ref } from 'vue'",
            "import apis from '#/apis'",
            "",
            "const emits = defineEmits(['edit', 'delete', 'check'])",
            "",
            "const props = defineProps({",
            "    params: {",
            "        type: Object,",
            "        default: () => ({})",
            "    }",
            "})",
            "",
            "const tableRef = ref(null)",
            "",
            "defineExpose({",
            "    query() {",
            "        tableRef.value.query()",
            "    }",
            "})",
            "</script>",
            "",
            "<template>",
            "    <z-query-page-table ref=\"tableRef\" :api=\"apis.$1\" :params=\"params\">",
            "        <el-table-column label=\"姓名\" prop=\"name\" width=\"100\"></el-table-column>",
            "        <el-table-column label=\"操作\" v-slot=\"{ row }\" min-width=\"200\">",
            "            <z-button type=\"primary\" @click=\"emits('edit', row)\">",
            "                <el-icon>",
            "                    <Edit />",
            "                </el-icon>",
            "            </z-button>",
            "            <z-button type=\"danger\" @click=\"emits('delete', row)\">",
            "                <el-icon>",
            "                    <Delete />",
            "                </el-icon>",
            "            </z-button>",
            "            <z-button type=\"success\">",
            "                <el-icon>",
            "                    <Odometer />",
            "                </el-icon>",
            "            </z-button>",
            "        </el-table-column>",
            "    </z-query-page-table>",
            "</template>",
            "",
            "<style lang=\"less\"></style>"
        ],
        "description": "table template"
    }
}